swagger: "2.0"
info:
  description: "Documentação da API do serviço \"Todo Manager\". Abaixo encontram-se todos os endpoints seus respectivos métodos permitidos e o formato esperado de entrada de dados."
  version: "1.0.0"
  title: "Todo Manager"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
- name: "Todo Manager"
  description: "Organize sua vida!"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "users"
  description: "Operações sobre usuários"
- name: "project"
  description: "Operações sobre projetos"
- name: "labels"
  description: "Operações sobre etiquetas"
- name: "timeline"
  description: "Logs sobre as operações executadas"
- name: "activities"
  description: "Operações sobre as atividades vinculadas aos projetos"
schemes:
- "https"
- "http"
paths:
  /projects:
    get:
      tags:
      - "project"
      summary: "Lista todos os projetos já criados"
      description: ""
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "chamadas por hora permitida para o usuário"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "data em que o token de acesso expira"
    post:
      tags:
      - "project"
      summary: "Adiciona um novo projeto vinculado ao usuário logado"
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Informações do projeto a ser adicionado"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        405:
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /projects/{id}:
    get:
      tags:
      - "project"
      summary: "Obtém o registro do projeto especificado"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "chamadas por hora permitida para o usuário"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "data em que o token de acesso expira"
    put:
      tags:
      - "project"
      summary: "Atualiza um projeto"
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Valores de campos que precisam ser atualizados ou adicionados"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        400:
          description: "ID inválido"
        404:
          description: "Projeto não encontrado"
        405:
          description: "Exceção de validação"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
    delete:
      tags:
      - "project"
      summary: "Deleta um projeto"
      description: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "project_id"
        in: "path"
        description: "ID do projeto a ser deletado"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "ID Inválido"
        404:
          description: "Projeto não encontrado"
  /labels:
    get:
      tags:
      - "labels"
      summary: "Lista todas as etiquetas criadas"
      description: ""
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "chamadas por hora permitida para o usuário"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "data em que o token de acesso expira"
    post:
      tags:
      - "labels"
      summary: "Adiciona um novo projeto vinculado ao usuário logado"
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Informações do projeto a ser adicionado"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        405:
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /labels/{id}:
    get:
      tags:
      - "labels"
      summary: "Obtém o registro do projeto especificado"
      description: ""
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "chamadas por hora permitida para o usuário"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "data em que o token de acesso expira"
    put:
      tags:
      - "labels"
      summary: "Atualiza um projeto"
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Valores de campos que precisam ser atualizados ou adicionados"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        400:
          description: "ID inválido"
        404:
          description: "Projeto não encontrado"
        405:
          description: "Exceção de validação"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
    delete:
      tags:
      - "labels"
      summary: "Deleta um projeto"
      description: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "project_id"
        in: "path"
        description: "ID do projeto a ser deletado"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "ID Inválido"
        404:
          description: "Projeto não encontrado"
  /activities:
    get:
      tags:
      - "activities"
      summary: "Lista todas as etiquetas criadas"
      description: ""
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "chamadas por hora permitida para o usuário"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "data em que o token de acesso expira"
    post:
      tags:
      - "activities"
      summary: "Adiciona um novo projeto vinculado ao usuário logado"
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Informações do projeto a ser adicionado"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        405:
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /activities/{id}:
    get:
      tags:
      - "activities"
      summary: "Obtém o registro do projeto especificado"
      description: ""
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "chamadas por hora permitida para o usuário"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "data em que o token de acesso expira"
    put:
      tags:
      - "activities"
      summary: "Atualiza um projeto"
      description: ""
      operationId: "updatePet"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Valores de campos que precisam ser atualizados ou adicionados"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        400:
          description: "ID inválido"
        404:
          description: "Projeto não encontrado"
        405:
          description: "Exceção de validação"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
    delete:
      tags:
      - "activities"
      summary: "Deleta um projeto"
      description: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "project_id"
        in: "path"
        description: "ID do projeto a ser deletado"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "ID Inválido"
        404:
          description: "Projeto não encontrado"
  /users:
    post:
      tags:
      - "users"
      summary: "Cria um novo usuário"
      description: "Cria um novo usuário que possui um ou mais projetos"
      operationId: "createUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto Usuário Criado"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
    get:
      tags:
      - "users"
      summary: "Lista todos os usuários do sistema"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "chamadas por hora permitida para o usuário"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "data em que o token de acesso expira"
  /users/{id}:
    get:
      tags:
      - "users"
      summary: "Obtém o registro de um usuário em específico"
      description: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /timeline:
    get:
      tags:
      - "timeline"
      summary: "Lista todos os logs de todas as operações realizadas"
      description: ""
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "chamadas por hora permitida para o usuário"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "data em que o token de acesso expira"
  
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Activity:
    type: "object"
    properties:
      name:
        type: "string"
      was_concluded:
        type: "boolean"
      date_created:
        type: "string"
      date_concluded:
        type: "string"
      concluded_by:
        type: "string"
      project:
        type: "string"
    xml:
      name: "Activity"
  User:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
      email:
        type: "string"
      id:
        type: "integer"
    xml:
      name: "User"
  Label:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
    xml:
      name: "Tag"
  Project:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      name:
        type: "string"
      owner:
        type: "string"
      label:
        type: "string"
      priority:
        type: "string"
        example: "N"
        description: "nível de prioridade deste projeto"
      activities:
        type: "array"
        items:
          type: "string"
      contributors:
        type: "array"
        items:
          type: "string"
      
    xml:
      name: "Pet"
  Timeline:
    type: "object"
    properties:
      log:
        type: "string"
      timestamp:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"